// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// noromod_cpp_boost
Rcpp::List noromod_cpp_boost(Rcpp::NumericVector& initial_conditions, const Rcpp::List& params, const double& time_end, const double& increment);
RcppExport SEXP _noromod_noromod_cpp_boost(SEXP initial_conditionsSEXP, SEXP paramsSEXP, SEXP time_endSEXP, SEXP incrementSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type initial_conditions(initial_conditionsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< const double& >::type time_end(time_endSEXP);
    Rcpp::traits::input_parameter< const double& >::type increment(incrementSEXP);
    rcpp_result_gen = Rcpp::wrap(noromod_cpp_boost(initial_conditions, params, time_end, increment));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_noromod_noromod_cpp_boost", (DL_FUNC) &_noromod_noromod_cpp_boost, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_noromod(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
